% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/iso8601_get_format_string.R
\name{iso8601_get_format_string}
\alias{iso8601_get_format_string}
\title{Get the format used in a vector of ISO 8601 strings}
\usage{
iso8601_get_format_string(x, return.format = FALSE)
}
\arguments{
\item{x}{(character) A vector of ISO 8601 strings created with `iso8601_convert`.
Vector contents must be one of dates and times, dates, or times. A mix 
of more than one type is not supported.}

\item{return.format}{(logical) Should format specifiers be returned with the output data? 
This argument supports identification of where differences in output
format occur.}
}
\value{
(character) The date time format representing user supplied ISO 8601 
    data. If more than one date time format is present, then the mode
    is returned along with a warning message. An error is issued when input 
    data is a mix of datetime, date, or time data.
    
    (data frame) If `return.format` is `TRUE` then a data frame is returned
    containing the input data and format specifiers. This argument supports
    identification of where differences in output format occur.
}
\description{
Get the format (e.g. 'YYYY-MM-DD') used in a vector of ISO 8601 strings.
    Supported formats are output by `iso8601_convert`.
}
\details{
`iso8601_get_format_string` uses regular expressions to parse input data 
    and identify the most common format present in a vector of ISO 8601 
    strings.
}
\examples{
# Get format strings
iso8601_get_format_string('2012-05-01')
iso8601_get_format_string('2012-05-01T13')
iso8601_get_format_string('2012-05-01T13:29:54+05')

# Expect a warning when more than one format is present.
iso8601_get_format_string(c('2012-05-01T13:45', '2012-05-02T13', '2012-05-03T13:45:30'))

}
